{
	/* 일반 */
	"console.log": {
		"prefix": "log",
		"body": [
			"console.log($1)"
		],
		"description": "console.log"
	},
	/* 리액트 컴포넌트 */
	"함수": {
		"prefix": "rc",
		"body": [
			"import React from 'react'",
			"import styles from './${1:Component}.module.scss'",
			"",
			"const ${1:Component} = () => null",
			"",
			"export default ${1:Component}"
		],
		"description": "리액트 컴포넌트: 함수"
	},
	"함수 (prop-types)": {
		"prefix": "rc",
		"body": [
			"import React from 'react'",
			"import PropTypes from 'prop-types'",
			"import styles from './${1:Component}.module.scss'",
			"",
			"const propTypes = {}",
			"const defaultProps = {}",
			"",
			"const ${1:Component} = () => null",
			"",
			"${1:Component}.propTypes = propTypes",
			"${1:Component}.defaultProps = defaultProps",
			"",
			"export default ${1:Component}"
		],
		"description": "리액트 컴포넌트: 함수"
	},
	/* 리듀서 */
	"리듀서": {
		"prefix": "reducer",
		"body": [
			"import { combineReducers } from 'redux'",
			"",
			"const $1 = (state = $2, action) => {",
			"  switch (action.type) {",
			"    case types.$3:",
			"      return $4",
			"",
			"    default:",
			"      return state",
			"  }",
			"}",
			"",
			"export default combineReducers({ $1 })"
		],
		"description": "리듀서: 시작하기"
	},
	/* 유닛 테스트 */
	"리액트 유닛 테스트": {
		"prefix": "desc",
		"body": [
			"import React from 'react'",
			"import { shallow } from 'enzyme'",
			"import { ${1:Component} } from './${1:Component}'",
			"",
			"describe('${1:Component}', () => {",
			"  let props, wrapper",
			"",
			"  beforeEach(() => {",
			"    props = {}",
			"    wrapper = shallow(<${1:Component} {...props} />)",
			"  })",
			"",
			"  it('renders itself', () => {",
			"    expect(wrapper.exists()).toBeTruthy()",
			"  })",
			"})"
		],
		"description": "유닛 테스트: 리액트"
	},
	"자바스크립트 유닛 테스트": {
		"prefix": "desc",
		"body": [
			"describe('$1', () => {",
			"  test('$2', () => {",
			"    ${3:expect(1).toBe(1)}",
			"  })",
			"})"
		],
		"description": "유닛 테스트: 자바스크립트"
	}
}
